plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id "com.google.protobuf" version "0.9.4"
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group = 'org.koornbeurs'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "md_5-public"
        url = "https://repo.md-5.net/content/groups/public/"
    }
    maven {
        name = "dmulloy2-repo"
        url = "https://repo.dmulloy2.net/repository/public/"
    }

}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'io.grpc:grpc-kotlin-stub:1.4.1'
    implementation 'io.grpc:grpc-protobuf:1.61.0'
    implementation 'io.grpc:grpc-netty:1.61.0'
    implementation 'io.grpc:grpc-services:1.61.0'
    implementation 'com.google.protobuf:protobuf-kotlin:3.25.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.0-RC2"
    implementation 'io.github.cdimascio:dotenv-kotlin:6.4.1'
    implementation 'com.jeff-media:custom-block-data:2.2.2'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.register('deleteOldJar', Delete) {
    outputs.upToDateWhen { false }
    delete fileTree(dir: 'PaperServer/plugins/', includes: ['PayToWin*.jar'])
}

shadowJar {
    dependsOn deleteOldJar
    relocate 'com.google.protobuf', 'myplugin.shadow.protobuf'
    relocate 'com.jeff_media.customblockdata', 'your.package.customblockdata'
    archiveClassifier.set('')
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    // Removed the Main-Class attribute as it's unnecessary for PaperMC plugins
    destinationDirectory = file('PaperServer/plugins/')

}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

kotlin {
    jvmToolchain(17)
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.2"
    }
    plugins {
        create("grpc") {
            artifact = "io.grpc:protoc-gen-grpc-java:1.61.0"
        }
        create("grpckt") {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:1.4.1:jdk8@jar"
        }
    }
    generateProtoTasks {
        all().forEach {
            it.plugins {
                create("grpc")
                create("grpckt")
            }
            it.builtins {
                create("kotlin")
            }
        }
    }
}

// The standard jar task is likely not needed as shadowJar should be used for building the plugin
// If you need to customize the jar task, you can do so here
